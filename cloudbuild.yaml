############################################################################
# BUILD ARTIFACTS
############################################################################

steps:
# TODO: enable once we can reconstruct .git directory using cbif.
## Pull in submodules to run jsonnet unit tests.
#- name: gcr.io/cloud-builders/git
#  args: [
#    'submodule', 'update', '--init', '--recursive'
#  ]

# Fetch a bearer token for running an epoxy-images trigger.
- name: debian:stable-slim
  args: ['bash', './trigger_epoxy-images_build.sh']

# Create the sjsonnet container for later steps.
- name: gcr.io/cloud-builders/docker
  args: [
    'build', '-t', 'jsonnet-env', '.'
  ]

# Generate jsonnet files.
- name: jsonnet-env
  args: [
    'make'
  ]
  env:
   - 'PROJECT=$PROJECT_ID'

############################################################################
# DEPLOY ARTIFACTS
############################################################################

# Publish new data.
- name: gcr.io/cloud-builders/gsutil
  args: [
    '-h', 'Cache-Control:private, max-age=0, no-transform', '-m',
    'cp', '-r', '/workspace/output/v1/*', 'gs://siteinfo-$PROJECT_ID/v1/'
  ]

# Copy configs to archive.
- name: gcr.io/cloud-builders/gsutil
  args: [
    '-h', 'Cache-Control:private, max-age=0, no-transform', '-m',
    'cp', '-r', '/workspace/output/configs/*', 'gs://siteinfo-$PROJECT_ID/configs/'
  ]

